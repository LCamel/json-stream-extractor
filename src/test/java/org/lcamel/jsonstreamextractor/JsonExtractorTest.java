/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.lcamel.jsonstreamextractor;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;

import org.junit.jupiter.api.Test;

class JsonExtractorTest {
    @Test
    void testExtractArrayObjects() throws IOException {
        testResources("/array_elements_simple");
    }

    @Test
    void testString() throws IOException {
        driveExtractArrayOfObjects(" { \"foo\": \"abc def\" }, { \"bar \": 4 } } ]", "{\"foo\":\"abc def\"}\n{\"bar \":4}\n");
    }

    @Test
    void testBraceInString() throws IOException {
        driveExtractArrayOfObjects(" { \"foo\": \"abc}\" }, { \"bar\": 4 } } ]", "{\"foo\":\"abc}\"}\n{\"bar\":4}\n");
        driveExtractArrayOfObjects(" { \"foo\": \"abc{\" }, { \"bar\": 4 } } ]", "{\"foo\":\"abc{\"}\n{\"bar\":4}\n");
    }
    @Test
    void testEscape() throws IOException {
        driveExtractArrayOfObjects(" { \"foo\": \"abc\\\"\" }, { \"bar\": 4 } } ]", "{\"foo\":\"abc\\\"\"}\n{\"bar\":4}\n");
    }


    void testResources(String resourceName) throws IOException {
        try (InputStream is = this.getClass().getResourceAsStream(resourceName);
                Scanner scanner = new Scanner(is);
                ) {
            scanner.useDelimiter("====\n");
            String input = scanner.next();
            System.out.println("input ##" + input + "##");
            String expected = scanner.next();
            System.out.println("expected ##" + expected + "##");
            driveExtractArrayOfObjects(input, expected);
        }
    }
    private static void driveExtractArrayOfObjects(String input, String expected) throws IOException {
        try (InputStream is = new ByteArrayInputStream(
                input.getBytes(StandardCharsets.UTF_8));
                ByteArrayOutputStream baos = new ByteArrayOutputStream(10000)) {
            JsonExtractor.extractArrayOfObjects(is, baos);
            assertArrayEquals(baos.toByteArray(), expected.getBytes(StandardCharsets.UTF_8));
            //assertEquals(expected, new String(baos.toByteArray()));
        }
    }
}
